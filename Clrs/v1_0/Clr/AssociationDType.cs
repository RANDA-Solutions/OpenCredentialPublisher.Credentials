/*
 * Comprehensive Learner Record Service OpenAPI (YAML) Definition
 *
 * The Comprehensive Learner Record Service enables the exchange of data about users and their achievements between a Comprehensive Learner Record Service Provider and the consumers of the associated data. This service has been described using the IMS Model Driven Specification development approach, this being the Platform Specific Model (PSM) of the service.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: lmattson@imsglobal.org
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Runtime.Serialization;
using System.Text.Json;
using System.Text.Json.Serialization;
using OpenCredentialPublisher.Credentials.Converters.Json;
using OpenCredentialPublisher.Credentials.Converters.Newtonsoft;
// ReSharper disable UnusedMember.Global

namespace OpenCredentialPublisher.Credentials.Clrs.v1_0.Clr
{
    /// <summary>
    /// Association is based on the CASE AssociationLink object. An Association associates (relates) one Achievement with another Achievement. 
    /// </summary>
    [NotMapped]
    public partial class AssociationDType
    { 
        /// <summary>
        /// The type of association. This uses an enumerated vocabulary. 
        /// </summary>
        /// <value>The type of association. This uses an enumerated vocabulary. </value>
        [Required]
        [JsonPropertyName("associationType"), Newtonsoft.Json.JsonProperty("associationType")]
        [Description("The type of association. This uses an enumerated vocabulary. ")]
        public AssociationTypeEnum AssociationType { get; set; }
        
        /// <summary>
        /// The '@id' of another achievement, or target of the association. Model Primitive Datatype = NormalizedString.
        /// </summary>
        /// <value>The '@id' of another achievement, or target of the association. Model Primitive Datatype = NormalizedString.</value>
        [Required]
        [JsonPropertyName("targetId"), Newtonsoft.Json.JsonProperty("targetId")]
        [Description("The '@id' of another achievement, or target of the association. Model Primitive Datatype = NormalizedString.")]
        public string TargetId { get; set; }
        
        /// <summary>
        /// A human readable title for the associated achievement. Model Primitive Datatype = String.
        /// </summary>
        /// <value>A human readable title for the associated achievement. Model Primitive Datatype = String.</value>
        [Required]
        [JsonPropertyName("title"), Newtonsoft.Json.JsonProperty("title")]
        [Description("A human readable title for the associated achievement. Model Primitive Datatype = String.")]
        public string Title { get; set; }

        /// <summary>
        /// Additional properties of the object
        /// </summary>
        [JsonExtensionData]
        [JsonPropertyName("additionalProperties"), Newtonsoft.Json.JsonProperty("additionalProperties")]
        public Dictionary<String, Object> AdditionalProperties { get; set; }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonSerializer.Serialize(this, Credentials.Extensions.TWJson.IgnoreNulls);
        }
    }
}
